version: "3"
services: 
  redis-master:
    container_name: "redis-master"
    build: "./7001"
    ports: 
      - "7001:6379"
    volumes:
      - "./7001/data:/data"
      - "./7001/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./7001/redis.log:/usr/local/redis/redis.log"
    networks:
      - "backend"
  redis-slave-a:
    container_name: "redis-slave-a"
    build: "./7002"
    ports:
      - "7002:6379"
    volumes: 
#      - "./7002/data:/data"   ### 注意这句话在windows系统运行出错，但是linux中没有影响
      - "./7002/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./7002/redis.log:/usr/local/redis/redis.log"
    networks:
      - "backend"
  redis-slave-b:
    container_name: "redis-slave-b"
    build: "./7003"
    ports:
      - "7003:6379"
    volumes:
#      - "./7003/data:/data"   ### 注意这句话在windows系统运行出错，但是linux中没有影响
      - "./7003/redis.conf:/usr/local/etc/redis/redis.conf"
      - "./7003/redis.log:/usr/local/redis/redis.log"
    networks:
      - "backend"
#   redis-sentinel:
#     container_name: "redis-sentinel"
#     hostname: "redis-sentinel"
#     image: "redis:alpine"
#     command: ["redis-server","/usr/local/etc/redis/sentinel.conf","--sentinel"]
#     ports:
#       - "26379:26379"
#     volumes:
# #      此处出现了/usr/local/etc/redis/sentinel.conf会提示无法创建，permission denied,所以我们直接挂载整个文件夹
#       - "./sentinel:/usr/local/etc/redis"
#     networks:
#       - "backend"
  redis-sentinel:
    container_name: "redis-sentinel"
    hostname: "redis-sentinel"
    build: sentinel
    environment: 
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=5000
    networks: 
      - "backend"

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=redis-master:redis-master,redis-slave-a:redis-slave-a,redis-slave-b:redis-slave-b
    ports:
      - "7500:8081"
    networks:
      - "backend"
  redis-web:
    image: "huskyui/redis-lua-test:latest"
    ports:
      - "8080:8080"
    container_name: "redis-web"
    networks:
      - "backend"
networks:
  "backend":
